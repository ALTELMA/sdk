// Code generated by go-swagger; DO NOT EDIT.

package write

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ory/keto-client-go/models"
)

// NewPatchRelationTuplesParams creates a new PatchRelationTuplesParams object
// with the default values initialized.
func NewPatchRelationTuplesParams() *PatchRelationTuplesParams {
	var ()
	return &PatchRelationTuplesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchRelationTuplesParamsWithTimeout creates a new PatchRelationTuplesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchRelationTuplesParamsWithTimeout(timeout time.Duration) *PatchRelationTuplesParams {
	var ()
	return &PatchRelationTuplesParams{

		timeout: timeout,
	}
}

// NewPatchRelationTuplesParamsWithContext creates a new PatchRelationTuplesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchRelationTuplesParamsWithContext(ctx context.Context) *PatchRelationTuplesParams {
	var ()
	return &PatchRelationTuplesParams{

		Context: ctx,
	}
}

// NewPatchRelationTuplesParamsWithHTTPClient creates a new PatchRelationTuplesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchRelationTuplesParamsWithHTTPClient(client *http.Client) *PatchRelationTuplesParams {
	var ()
	return &PatchRelationTuplesParams{
		HTTPClient: client,
	}
}

/*PatchRelationTuplesParams contains all the parameters to send to the API endpoint
for the patch relation tuples operation typically these are written to a http.Request
*/
type PatchRelationTuplesParams struct {

	/*Payload*/
	Payload []*models.PatchDelta

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch relation tuples params
func (o *PatchRelationTuplesParams) WithTimeout(timeout time.Duration) *PatchRelationTuplesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch relation tuples params
func (o *PatchRelationTuplesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch relation tuples params
func (o *PatchRelationTuplesParams) WithContext(ctx context.Context) *PatchRelationTuplesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch relation tuples params
func (o *PatchRelationTuplesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch relation tuples params
func (o *PatchRelationTuplesParams) WithHTTPClient(client *http.Client) *PatchRelationTuplesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch relation tuples params
func (o *PatchRelationTuplesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPayload adds the payload to the patch relation tuples params
func (o *PatchRelationTuplesParams) WithPayload(payload []*models.PatchDelta) *PatchRelationTuplesParams {
	o.SetPayload(payload)
	return o
}

// SetPayload adds the payload to the patch relation tuples params
func (o *PatchRelationTuplesParams) SetPayload(payload []*models.PatchDelta) {
	o.Payload = payload
}

// WriteToRequest writes these params to a swagger request
func (o *PatchRelationTuplesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Payload != nil {
		if err := r.SetBodyParam(o.Payload); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
