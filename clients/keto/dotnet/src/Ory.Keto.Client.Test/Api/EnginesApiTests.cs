/* 
 * ORY Keto
 *
 * Ory Keto is a cloud native access control server providing best-practice patterns (RBAC, ABAC, ACL, AWS IAM Policies, Kubernetes Roles, ...) via REST APIs.
 *
 * The version of the OpenAPI document: v0.0.0-alpha.46
 * Contact: hi@ory.sh
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Ory.Keto.Client.Client;
using Ory.Keto.Client.Api;
using Ory.Keto.Client.Model;

namespace Ory.Keto.Client.Test
{
    /// <summary>
    ///  Class for testing EnginesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EnginesApiTests : IDisposable
    {
        private EnginesApi instance;

        public EnginesApiTests()
        {
            instance = new EnginesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EnginesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EnginesApi
            //Assert.IsType(typeof(EnginesApi), instance, "instance is a EnginesApi");
        }

        
        /// <summary>
        /// Test AddOryAccessControlPolicyRoleMembers
        /// </summary>
        [Fact]
        public void AddOryAccessControlPolicyRoleMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //string id = null;
            //KetoAddOryAccessControlPolicyRoleMembersBody body = null;
            //var response = instance.AddOryAccessControlPolicyRoleMembers(flavor, id, body);
            //Assert.IsType<KetoOryAccessControlPolicyRole> (response, "response is KetoOryAccessControlPolicyRole");
        }
        
        /// <summary>
        /// Test DeleteOryAccessControlPolicy
        /// </summary>
        [Fact]
        public void DeleteOryAccessControlPolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //string id = null;
            //instance.DeleteOryAccessControlPolicy(flavor, id);
            
        }
        
        /// <summary>
        /// Test DeleteOryAccessControlPolicyRole
        /// </summary>
        [Fact]
        public void DeleteOryAccessControlPolicyRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //string id = null;
            //instance.DeleteOryAccessControlPolicyRole(flavor, id);
            
        }
        
        /// <summary>
        /// Test DoOryAccessControlPoliciesAllow
        /// </summary>
        [Fact]
        public void DoOryAccessControlPoliciesAllowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //KetoOryAccessControlPolicyAllowedInput body = null;
            //var response = instance.DoOryAccessControlPoliciesAllow(flavor, body);
            //Assert.IsType<KetoAuthorizationResult> (response, "response is KetoAuthorizationResult");
        }
        
        /// <summary>
        /// Test GetOryAccessControlPolicy
        /// </summary>
        [Fact]
        public void GetOryAccessControlPolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //string id = null;
            //var response = instance.GetOryAccessControlPolicy(flavor, id);
            //Assert.IsType<KetoOryAccessControlPolicy> (response, "response is KetoOryAccessControlPolicy");
        }
        
        /// <summary>
        /// Test GetOryAccessControlPolicyRole
        /// </summary>
        [Fact]
        public void GetOryAccessControlPolicyRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //string id = null;
            //var response = instance.GetOryAccessControlPolicyRole(flavor, id);
            //Assert.IsType<KetoOryAccessControlPolicyRole> (response, "response is KetoOryAccessControlPolicyRole");
        }
        
        /// <summary>
        /// Test ListOryAccessControlPolicies
        /// </summary>
        [Fact]
        public void ListOryAccessControlPoliciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //long? limit = null;
            //long? offset = null;
            //string subject = null;
            //string resource = null;
            //string action = null;
            //var response = instance.ListOryAccessControlPolicies(flavor, limit, offset, subject, resource, action);
            //Assert.IsType<List<KetoOryAccessControlPolicy>> (response, "response is List<KetoOryAccessControlPolicy>");
        }
        
        /// <summary>
        /// Test ListOryAccessControlPolicyRoles
        /// </summary>
        [Fact]
        public void ListOryAccessControlPolicyRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //long? limit = null;
            //long? offset = null;
            //string member = null;
            //var response = instance.ListOryAccessControlPolicyRoles(flavor, limit, offset, member);
            //Assert.IsType<List<KetoOryAccessControlPolicyRole>> (response, "response is List<KetoOryAccessControlPolicyRole>");
        }
        
        /// <summary>
        /// Test RemoveOryAccessControlPolicyRoleMembers
        /// </summary>
        [Fact]
        public void RemoveOryAccessControlPolicyRoleMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //string id = null;
            //string member = null;
            //instance.RemoveOryAccessControlPolicyRoleMembers(flavor, id, member);
            
        }
        
        /// <summary>
        /// Test UpsertOryAccessControlPolicy
        /// </summary>
        [Fact]
        public void UpsertOryAccessControlPolicyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //KetoOryAccessControlPolicy body = null;
            //var response = instance.UpsertOryAccessControlPolicy(flavor, body);
            //Assert.IsType<KetoOryAccessControlPolicy> (response, "response is KetoOryAccessControlPolicy");
        }
        
        /// <summary>
        /// Test UpsertOryAccessControlPolicyRole
        /// </summary>
        [Fact]
        public void UpsertOryAccessControlPolicyRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string flavor = null;
            //KetoOryAccessControlPolicyRole body = null;
            //var response = instance.UpsertOryAccessControlPolicyRole(flavor, body);
            //Assert.IsType<KetoOryAccessControlPolicyRole> (response, "response is KetoOryAccessControlPolicyRole");
        }
        
    }

}
